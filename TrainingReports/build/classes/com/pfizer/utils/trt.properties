#This is the properties file for TRT application


#Constants for Simulate Users Page
vpList='VP','DDO','DAO','DO'
svpList = 'SVP', 'DCO',  'NSD'
rmList = 'RM','ARM', 'ASD', 'SD','SDIR','SDTL','CAD'
rcList = 'RC'
dmList = 'DM'

#Constants for Employee Handler query
cluster_cd='Cust Bus Unit','Steere','Pratt','Powers','Specialty Markets','Pratt Steere PR','Powers - PR','SM PR','ONC Bus Unit'


#Constants for Access drop down in Edit screen
TSR_POWER1=Powers - PR
TSR_POWER2=Powers

TSR_STEERE1=Pratt Steere PR
TSR_STEERE2=Steere

SPECIAL1=Pratt Steere PR
SPECIAL2=Pratt
SPECIAL3=Powers - PR
SPECIAL4=Powers
SPECIAL5=Steere
SPECIAL6=ONC Bus Unit
SPECIAL7=Specialty Markets
SPECIAL8=Cust Bus Unit

#Contants for UserHandler-validateUser

CLUSTER1=Steere
CLUSTER2=Cust Bus Unit
CLUSTER3=Pratt
CLUSTER4=Powers						
CLUSTER5=Powers - PR
CLUSTER6=SM PR
CLUSTER7=Pratt Steere PR						
CLUSTER8=Specialty Markets
CLUSTER9=ONC Bus Unit

ONCOLOGY=ONC Bus Unit



#Constants for Territory Handler
CLUSTERCODE1=Steere
CLUSTERCODE2=Pratt
CLUSTERCODE3=Powers
CLUSTERCODE4=Specialty Marke
CLUSTERCODE5=Pratt Steere PR
CLUSTERCODE6=Powers - PR
CLUSTERCODE7=SM PR
CLUSTERCODE8=CBU
CLUSTERCODE9=ONC Bus Unit

#Queries in EmployeeHandler
#employeSql=select distinct e.emplid as emplId, e.guid as guid, e.promotion_date as promoDate,e.effective_hire_date as hireDate,e.sex as gender, e.geography_id,e.geo_desc as geoDesc, e.email_address as email, e.reports_to_emplid as reportsToEmplid,DECODE(e.empl_status,'A','Active','L','On-Leave','P','On-Leave','T','Terminated') AS FIELDACTIVE , e.sales_position_id as salesPositionId, e.sales_position_id_desc as salesPositionDesc, e.reports_to_sales_position_id as reportsToSalesPosition,e.role_cd as role, e.sales_group as salesOrgDesc,e.bu as bu,e.last_name as lastName,e.first_name as firstName, e.middle_name as middleName,e.preferred_name as preferredName,e.parent_geography_id as parentGeographyId from mv_field_employee_rbu e where
#employeSql=select distinct e.emplid as emplId, e.guid as guid, e.promotion_date as promoDate,e.effective_hire_date as hireDate,e.sex as gender, e.geography_id,e.geo_desc as geoDesc, e.geo_type as geoType, e.email_address as email, e.reports_to_emplid as reportsToEmplid,DECODE(e.empl_status,'A','Active','L','On-Leave','P','On-Leave','T','Terminated') AS FIELDACTIVE ,e.sales_position_id as salesPositionId, e.sales_position_id_desc as salesPositionDesc, e.reports_to_sales_position_id as reportsToSalesPosition, e.role_cd as role,e.role_desc as roledesc, e.sales_group as salesOrgDesc,e.bu as bu,e.last_name as lastName,e.first_name as firstName, e.middle_name as middleName,e.preferred_name as preferredName,e.parent_geography_id as parentGeographyId from mv_field_employee_rbu e where
#Updated to fetch Sales Position Type Code
#employeSql=select distinct e.emplid as emplId, e.guid as guid, e.promotion_date as promoDate,e.effective_hire_date as hireDate,e.sex as gender, e.geography_id,e.geo_desc as geoDesc, e.geo_type as geoType, e.email_address as email,e.reports_to_emplid as reportsToEmplid,DECODE(e.empl_status,'A','Active','L','On-Leave','P','On-Leave','T','Terminated') AS FIELDACTIVE ,e.sales_position_id as salesPositionId, e.sales_position_id_desc as salesPositionDesc,e.reports_to_sales_position_id as reportsToSalesPosition, e.role_cd as role,e.role_desc as roledesc, e.sales_group as salesOrgDesc,e.bu as bu,e.last_name as lastName,e.first_name as firstName, e.middle_name as middleName,e.preferred_name as preferredName,e.parent_geography_id as parentGeographyId, e.sales_position_type_cd as salesPositionTypeCode from mv_field_employee_rbu e where
#Added for TRT Phase 2 - To include GroupCD
employeSql=select distinct e.emplid as emplId, e.guid as guid, e.promotion_date as promoDate,e.effective_hire_date as hireDate,e.sex as gender, e.geography_id,e.geo_desc as geoDesc, e.geo_type as geoType, e.email_address as email,e.reports_to_emplid as reportsToEmplid,DECODE(e.empl_status,'A','Active','L','On-Leave','P','On-Leave','T','Terminated') AS FIELDACTIVE ,e.sales_position_id as salesPositionId, e.sales_position_id_desc as salesPositionDesc,e.reports_to_sales_position_id as reportsToSalesPosition, e.role_cd as role,e.role_desc as roledesc, e.sales_group as salesOrgDesc,e.bu as bu,e.last_name as lastName,e.first_name as firstName, e.middle_name as middleName,e.preferred_name as preferredName,e.parent_geography_id as parentGeographyId, e.sales_position_type_cd as salesPositionTypeCode,group_cd as groupCD from mv_field_employee_rbu e where


#P2LHandler
sqlAlt = e.last_name as lastName,  e.last_name as mlastName, e.preferred_name as mpreferredName,e.sales_group as salesOrgDesc, e.bu as bu, e.geo_desc as geoDesc, e.email_address as email, e.role_cd as role, e.preferred_name as preferredName,

#Queries in TerritoryHandler
#GeographySql=select distinct parent_geography_id, geography_id, geography_desc, LEVEL Geo_Level from (SELECT (select distinct emplid from MV_GEOGRAPHY_RBU where emplid=x.reports_to_emplid ) REPORTS_TO_EMPLID, emplid, geography_id, geography_desc,parent_geography_id, LEVEL FROM MV_GEOGRAPHY_RBU x CONNECT BY PRIOR emplid=x.reports_to_emplid  START WITH reports_to_emplid = ?) x CONNECT BY PRIOR geography_id=x.parent_geography_id START WITH parent_geography_id = ? order by geo_level asc
#GeographySql=select distinct parent_geography_id as Parent_Geography_Id, geography_id as Geography_Id, geography_desc||' ('||geography_type||')' as Geo_Desc, LEVEL Geo_Level from mv_geography_rbu x CONNECT BY PRIOR geography_id=x.parent_geography_id and geography_id <> parent_geography_id START WITH parent_geography_id = ? order by geo_level asc
SalesPositionSql=select distinct REPORTS_TO_SALES_POSITION_ID, SALES_POSITION_ID, SALES_POSITIONID_ID_DESC, LEVEL Sales_Level from MV_SALESPOSITION_RBU x CONNECT BY PRIOR SALES_POSITION_ID=x.REPORTS_TO_SALES_POSITION_ID and SALES_POSITION_ID <> REPORTS_TO_SALES_POSITION_ID START WITH REPORTS_TO_SALES_POSITION_ID = ? order by Sales_Level asc
SalesGroupSql=select distinct sales_group from (SELECT (select distinct emplid from MV_FIELD_EMPLOYEE_RBU where emplid=x.reports_to_emplid) REPORTS_TO_EMPLID, emplid, sales_group FROM MV_FIELD_EMPLOYEE_RBU x CONNECT BY PRIOR emplid=x.reports_to_emplid START WITH reports_to_emplid = ? ) order by sales_group asc
#AdminGeo=select distinct parent_geography_id as Parent_Geography_Id, geography_id as Geography_Id, geography_desc||' ('||geography_type||')' as Geo_Desc, LEVEL Geo_Level from mv_geography_rbu x CONNECT BY PRIOR geography_id=x.parent_geography_id and geography_id <> parent_geography_id START WITH parent_geography_id is null order by geo_level asc
#AdminGeo=select distinct parent_geography_id as Parent_Geography_Id, geography_id as Geography_Id, geography_desc as Geo_Desc, geography_type as Geo_Type, LEVEL Geo_Level from mv_geography_rbu x CONNECT BY PRIOR geography_id=x.parent_geography_id and geography_id <> parent_geography_id START WITH parent_geography_id is null order by geo_level asc
#AdminGeo=select Parent_Geography_Id, Geography_Id, Geo_Desc, Geo_Level from (select distinct parent_geography_id as Parent_Geography_Id, geography_id as Geography_Id, geography_desc||' ('||geography_type||')' as Geo_Desc, LEVEL Geo_Level from mv_geography_rbu x CONNECT BY PRIOR geography_id=x.parent_geography_id and geography_id <> parent_geography_id START WITH parent_geography_id is null order by geo_level asc) where geography_id is not null
#AdminGeo=select Parent_Geography_Id, Geography_Id, Geo_Desc, Geo_Level from mv_admin_geography_rbu order by geo_level asc
AdminSalesPositionSql=select REPORTS_TO_SALES_POSITION_ID, SALES_POSITION_ID, SALES_POSITIONID_ID_DESC, Sales_Level from MV_ADMIN_SALESPOSITION_RBU order by Sales_Level asc

#Updated to fetch all managers-ReportsTo and AssignedTo 
#validUserSql=select emplid from mv_field_employee_rbu where reports_to_emplid=?
#Changing the sql for CSO requirements
validUserSql=select emplid from mv_field_employee_relation where related_emplid=?
#specialValidUserSql=select emplid from mv_field_employee_relation where emplid=?
#checkRoleSql= select role_cd,sales_position_type_cd from special_assigned_to_roles where role_cd=? and sales_position_type_cd=?
#Added for TRT Phase 2 - To include HQ users 
hqUserSql=select emplid from user_access where Type='HQ User' and emplid=?
#Queries in UserHandler.
#Added HQ groups
usergroup=insert into user_group (group_id,business_unit,sales_organization,role,group_name,feedback_users,hq_users) values (user_group_seq.nextval,?,?,?,?,?,?)
#Added HQ groups
updateusergroup=update user_group set business_unit = ?, sales_organization = ?, role = ?, group_name = ?,feedback_users = ?,hq_users = ? where group_id = ?
#checkRCSql=select mgr_emplid as emplid,geography_id as geoid from MV_RC_RBU where rc_emplid=?

#specialRoleDetailsSql=select reports_to_sales_position_id as salespositionid from MV_FIELD_EMPLOYEE_RBU where sales_position_id=?
specialRoleSql= SELECT * from SPECIAL_ROLES WHERE ROLE_CD=?
specialRoleDetailsSql=select a.REPORTS_TO_SALES_POSITION_ID salespositionid, b.emplid emplid from (select distinct REPORTS_TO_SALES_POSITION_ID, SALES_POSITION_ID, LEVEL Sales_Level from MV_SALESPOSITION_RBU x CONNECT BY NOCYCLE PRIOR REPORTS_TO_SALES_POSITION_ID = x.SALES_POSITION_ID and SALES_POSITION_ID <> REPORTS_TO_SALES_POSITION_ID START WITH SALES_POSITION_ID = ?) a, mv_field_employee_rbu b where Sales_Level in (?) and a.reports_to_SALES_POSITION_ID=b.SALES_POSITION_ID (+)

#Added HQ groups
userGroupsSql=SELECT GROUP_NAME,BUSINESS_UNIT,SALES_ORGANIZATION,ROLE,FEEDBACK_USERS,HQ_USERS FROM USER_GROUP

#Added query for getting P2L scores visibility
visibilityQuery= select P2L_SCORES_VISIBLE_FOR_ALL from P2L_SCORES_VISIBILITY where SALES_POSITION_TYPE_CD=?